service: user-service
frameworkVersion: ">=1.11.0 <2.0.0"
provider:
  name: aws
  apiKeys:
    - ${self:service}-${opt:stage}-internal
  runtime: nodejs10.x
  region: us-east-1
  versionFunctions: false
  role: ${cf:user-stateful-${opt:stage}.LambdaExecutionRole}
  environment:
    STAGE: ${opt:stage}
    ENGINE_API_KEY: ${ssm:/${opt:stage}/user/secret/ENGINE_API_KEY~true}
    USER_TABLE_NAME: ${ssm:/${opt:stage}/user/config/USER_TABLE_NAME}
    USER_TABLE_EMAIL_INDEX: ${ssm:/${opt:stage}/user/config/USER_TABLE_EMAIL_INDEX}

plugins:
  - serverless-offline
  - serverless-domain-manager
  - serverless-webpack

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: 'yarn'

  customDomain:
    domainName: ${opt:stage}-internal-api.acloud.guru
    stage: ${opt:stage}
    basePath: user
    certificateName: '*.acloud.guru'
    createRoute53Record: false
    endpointType: 'regional'

package:
  include:
    - src/**
    - '!src/**/*.test.js'

functions:
  graphql:
    handler: src/gql/index.handler
    memorySize: 1536
    timeout: 30
    events:
      - http:
          path: graphql
          method: post
          cors: true
          private: true
    alarms:
      - name: functionInvocations
        threshold: 3000
    tags:
      FunctionType: graphql_api

  auth0Login:
    handler: src/handlers/login.handler
    memorySize: 512
    timeout: 20
    events:
      - http:
          path: auth0/login
          method: post
          private: true
    alarms:
      - name: functionInvocations
        threshold: 3000
    tags:
      FunctionType: webhook
      WebHookSource: auth0
